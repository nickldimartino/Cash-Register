** start of undefined **

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <meta content='viewport' width='width=device-width, initial-scale=1.0' />
    <link rel='stylesheet' href='./styles.css' />
    <title>Cash Register</title>
  </head>
  <body>
    <div id='block'>
      <input id='cash' />
      <div id='change-due'></div>
      <button id='purchase-btn'>Purchase</button>
    </div>
    <script src='./script.js'></script>
  </body>
</html>

** end of undefined **

** start of undefined **



** end of undefined **

** start of undefined **

/*
let price = 1.87;
let cid = [
  ["PENNY", 1.01],
  ["NICKEL", 2.05],
  ["DIME", 3.1],
  ["QUARTER", 4.25],
  ["ONE", 90],
  ["FIVE", 55],
  ["TEN", 20],
  ["TWENTY", 60],
  ["ONE HUNDRED", 100]
];
*/
let price = 19.5;
let cid = [["PENNY", 0.01], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 1], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]];

const purchaseButton = document.getElementById('purchase-btn');
const changeDueDiv = document.getElementById('change-due');
const cashInput = document.getElementById('cash');

const purchase = () => {
  const userInput = cashInput.value;
  
  const baseValues = {
    "PENNY": .01,
    "NICKEL": .05,
    "DIME": .10,
    "QUARTER": .25,
    "ONE": 1.00,
    "FIVE": 5.00,
    "TEN": 10.00,
    "TWENTY": 20.00,
    "ONE HUNDRED": 100.00
  }

  let totalCID = 0;
  for (let i of cid) {
    totalCID += i[1];
  }

  totalCID = totalCID.toFixed(2);
  cid = cid.reverse();
  const retArrCid = [];
  for (let i = 0; i < cid.length; i++) {
    retArrCid.push(`\n${cid[i][0]}: $${cid[i][1].toFixed(2)}`);
  }
  let changeOwed = userInput - price;

  const changeArray = [];

  if (userInput < price) {
    alert("Customer does not have enough money to purchase the item");
    return;
  } else if (userInput == price) {
    changeDueDiv.innerText = "No change due - customer paid with exact cash";
    return;
  } else if (changeOwed > totalCID) {
    changeDueDiv.innerText = "Status: INSUFFICIENT_FUNDS";
    return;
  } else if (changeOwed == totalCID) {
    changeDueDiv.innerText = "Status: CLOSED\nChange: "+retArrCid;
    return;
  } else {
    for (let j of cid) {
      let tempCashValue = [j[0], 0];

      while (changeOwed >= baseValues[j[0]] && j[1] > 0) {
        tempCashValue[1] += baseValues[j[0]];
        j[1] -= baseValues[j[0]];
        changeOwed -= baseValues[j[0]];
        changeOwed = changeOwed.toFixed(2);
      }

      if (tempCashValue[1] > 0) {
        changeArray.push(tempCashValue);
      }
    }
  }
  const retArrOpen = [];
  for (let i = 0; i < changeArray.length; i++) {
    retArrOpen.push(`\n${changeArray[i][0]}: $${changeArray[i][1].toFixed(2)}`);
  }
  
  if (changeOwed > 0) {
    changeDueDiv.innerText = "Status: INSUFFICIENT_FUNDS";
    return;
  }

  changeDueDiv.innerText = "Status: OPEN\nChange: "+retArrOpen;
  return;
}

purchaseButton.addEventListener("click", purchase);

** end of undefined **

